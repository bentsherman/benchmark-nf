manifest {
    mainScript = "main.nf"
    defaultBranch = "master"
    nextflowVersion = ">=20.07.0"
}



params {
    input {
        dir = "input"
        gmy_files = "*.gmy"
        xml_files = "*.xml"
        conditions_file = "conditions.txt"
        trials = 1
    }

    output {
        dir = "output"
    }
}



report {
    enabled = true
    file = "${params.output.dir}/reports/report.html"
}



timeline {
    enabled = true
    file = "${params.output.dir}/reports/timeline.html"
}



trace {
    enabled = true
    fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action"
    file = "${params.output.dir}/reports/trace.txt"
    raw = true
}



process {
    errorStrategy = "ignore"
}



profiles {
    pbs {
        process {
            executor = "pbspro"
            time = "24h"

            beforeScript = "rm -rf results"
            afterScript  = "rm -rf results"

            module = {
                (c.gpu_model == "cpu")
                ? "hemelb/${c.latticetype}-p100"
                : "hemelb/${c.latticetype}-${c.gpu_model}"
            }

            clusterOptions = {
                (c.gpu_model == "cpu")
                ? "-l select=${c.np}:ncpus=1:mem=16gb:interconnect=fdr"
                : "-l select=${c.np}:ncpus=1:mem=16gb:ngpus=1:gpu_model=${c.gpu_model}"
            }
        }
        executor {
            queueSize = 50
        }
    }

    standard {
        process {
            executor = "local"
            cpus = { c.np }
            memory = 16.GB

            beforeScript = "rm -rf results"
            afterScript  = "rm -rf results"
        }
        executor {
            queueSize = 1
        }
    }

    testing {
        process.errorStrategy = "terminate"
    }
}
